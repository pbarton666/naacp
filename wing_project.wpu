#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('build_one.py'): {}}
debug.show-args-dialog = {loc('build_all.py'): False,
                          loc('build_all_numpy.py'): False,
                          loc('build_flat_files.py'): False,
                          loc('build_one.py'): False,
                          loc('build_tables.py'): False,
                          loc('describe_db.py'): False,
                          loc('get_max_rows.py'): False,
                          loc('query_db.py'): False,
                          loc('test_db_contents.py'): False,
                          loc('test_db_loading.py'): False,
                          loc('test_misc.py'): False,
                          loc('test_np_array.py'): False,
                          loc('test_query_db.py'): False,
                          loc('utils_and_settings.py'): False}
edit.file-encoding = {loc('build_flat_files.bak.py'): 'UTF-8',
                      loc('build_one.py'): 'UTF-8',
                      loc('describe_db.py'): 'UTF-8',
                      loc('get_max_rows.py'): 'UTF-8',
                      loc('query_db.py'): 'UTF-8',
                      loc('test_db_contents'): 'UTF-8',
                      loc('test_db_contents.py'): 'UTF-8',
                      loc('test_query_db.py'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'DTKOdTFBsINdIy5ZPotHInUeya'\
        'LmovpU',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.08778346744696419,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [2,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.3849206349206349,
        'override_title': None,
        'pagelist': [('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'test',
                                       'fReverse': False,
                                       'fSearchText': u'debug',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-stack',
                      'wide',
                      0,
                      {'codeline-mode': 'below'}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 183,
                       'folded-linenos': [],
                       'history': {None: [],
                                   u'file:/home/pat/data/RL_analysis/naacp/build_all.py': ["n"\
        "p.savetxt(data_fn, npa, delimiter=',', header=\"|\".join(columns_re"\
        "ported), fmt=\"%u\")\n",
        't_name\n',
        't_name[:-5]\n',
        "f=open(data_fn, 'w')\n",
        "dn='/home/pat/mary/flat_NoRed-YesHwy'\n",
        'os.listdir(dn)\n',
        "dn1='/home/pat/mary'\n",
        'os.listdir(dn1)\n',
        "file = 'flat_NoRed-YesHwy'\n",
        'fn2=os.path.join(dn, file)\n',
        'fn2=os.path.join(dn1, file)\n',
        'fn2\n',
        'dn\n',
        'dn==fn2\n',
        'fn\n',
        'root\n',
        'os.path.exists(root)\n',
        'os.path.exists(os.path.join(root, out_dir))\n',
        'if not os.path.exists(os.path.join(root, out_dir)):\n   os.mkdir(os'\
        '.path.join(root,out_dir))\n\n',
        'outdir\n',
        'out_dir\n',
        'data_col\n',
        'data_fn\n',
        "ddir='/home/pat/mary/flat_test/'\n",
        'os.path.exists(ddir)\n',
        'data[0]\n',
        'len(data)**2\n',
        'len(npa)/len(data)\n',
        'len(npa)[0]\n',
        'len(npa[0])\n',
        '4951800/1390041\n',
        'pprint(sql)\n',
        'header\n',
        'os.path.join(root, d, files[0])\n',
        "x=open(os.path.join(root, d, files[0]), 'r')\n",
        'first_row\n',
        'od\n',
        " np.savetxt(data_fn, npa, delimiter=',', header=\"|\".join(columns_"\
        "reported), fmt=\"%u\")\n",
        'initial_rows\n',
        'initial_rows-rows_so_far\n',
        'a=od[0]\n',
        'b=od[1]\n',
        'rows\n',
        'input_cols\n',
        'rows_so_far+1\n',
        'len(od)[0]\n',
        'len(od[0])\n',
        'len(od[1])\n',
        'od[0][-1]\n',
        'od[0][0]\n',
        'a,b=od\n',
        'a[-1]\n',
        'b[-1]\n',
        'npa[:,0]=od[0]\n',
        'len(od)\n',
        'a, b=od\n',
        'len(a)\n',
        'print(a[:2000])\n',
        'for x in a[:2000]:\n   print(a)\n\n',
        'min(start_row+rows, max_row+1)\n',
        'len(rwa)\n',
        'len(ca)\n',
        'for item in ca[:2000]:\n    print(item)\n\n',
        'a,b = od\n',
        'for item in a[:2000]:\n    print(item)\n\n',
        'for item in b[:2000]:\n    print(item)\n\n',
        'for item in b[-1180:]:\n    print(item)\n\n',
        'for item in 1[-1180:]:\n    print(item)\n\n',
        'for item in a[-1180:]:\n    print(item)\n\n',
        'len(data)\n',
        'len(npa)\n',
        "raw_data = np.genfromtxt(fn, delimiter=',', dtype=int, \n          "\
        "               skip_header=skip_header,\n                         s"\
        "kip_footer=0)\n\n",
        'data = raw_data[:, 1:]          #removes row/col headers\ndata=data'\
        '.ravel()            #turns it into a vector\n\n',
        'npa[:,data_col]=data[:]\n',
        "skip_footer = this_window['skip_footer']\n",
        'os.walk(in_dir)\n',
        'print(root, dirs, files in os.walk(in_dir))\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/build_one.py': ['d'\
        'irs\n',
        'dirs[1]\n',
        "d = dirs[1]data = np.genfromtxt(os.path.join(root, d, files[0]), de"\
        "limiter=',', dtype=int)\n",
        "data = np.genfromtxt(os.path.join(root, d, files[0]), delimiter=','"\
        ", dtype=int)\n",
        "data = np.genfromtxt(os.path.join(root, d, files[0]), delimiter=','"\
        ", dtype=float)\n",
        'data[0][0]\n',
        'data[1][1]\n',
        "np.savetxt(data_fn, npa, delimiter=',', header=\"|\".join(columns_r"\
        "eported), fmt=\"%u\")\n",
        'logger.warning(msg.format(data_fn, os.path.join(root,d),d))\n',
        "msg='Could not save file {}  for info in {}'\n",
        'logger.warning(msg.format(data_fn, d))\n',
        'data_dir\n',
        'pprint(sql)\n',
        'data[3][3]\n',
        'raw_data\n',
        'npa\n',
        "np.savetxt(data_fn, npa, delimiter=',', header=\"|\".join(columns_r"\
        "eported), fmt=\"%s\")\n",
        'sql\n',
        "curs.execute('END')\n",
        "open(file, 'r') as fil\n",
        "fil=open(file, 'r')\n",
        'curs.copy_expert(sql=sql, file=fil)    \n',
        'nd[0]\n',
        'od[0]\n',
        'npa[1]\n',
        'float(id[0])\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/describe_db.py': ["c"\
        "urs.execute('DROP TABLE {}').format('dir_1_data'))\n",
        "curs.execute('DROP TABLE {}').format('dir_1_data')\n",
        "curs.execute('DROP TABLE dir_1_data')\n"],
                                   u'file:/home/pat/data/RL_analysis/naacp/get_max_rows.py': ['n'\
        'pa=np.zeros((rows**2, cols)) \n',
        'npa=np.zeros((rows**2, cols), dtype=int) \n',
        'npa\n',
        'rows =10\n',
        'rows =1000\n',
        'rows =100000\n',
        'rows =50000\n',
        'rows=10000\n',
        'rows\n',
        'cols\n',
        'rows=1\n',
        'npa=np.zeros((rows**2, cols))\n',
        'y\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/query_db.py': ['i'\
        'mport build_all\n',
        'db\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/test_db_contents.py': ['t'\
        'name\n',
        'tables\n',
        'for t in tables:\n  print(t)\n\n',
        'tab.e_data.keys()\n',
        'dirs\n',
        'pp(table_data)\n',
        'pp(tables)\n',
        'curs.fetchone()\n',
        'curs.fetchone()[1]\n',
        'res=cursor.fetchone()\n',
        'res=curs.fetchone()\n',
        'curs.execute("SELECT COUNT(*) from {}".format(t_name))\n',
        'curs\n',
        'res = curs.fetchone()\n',
        'res[1]\n',
        'res[1,]\n',
        'res[0]\n',
        't_name\n',
        'col_data=t_name[t_name]\n',
        'col_data=table_data[t_name]\n',
        'for c in col_data:\n        print(c)\n\n',
        "c['file']\n",
        "f['col']\n",
        "c['col']\n",
        ' db_val=curs.fetchone()[1]\n',
        'curs.execute(sql)\n',
        'sql=sql.format(db_col, t_name, LAST_ORIG, LAST_DEST)\n',
        "db_col = col['col']\n",
        "db_col = c['col']\n",
        "sql.execute('END')\n",
        'curs.execute(sql.format(db_col, t_name, LAST_ORIG, LAST_DEST))\n',
        'db_val\n',
        'curs.execute(sql.format(t_name))\n',
        'x=curs.fetchall()\n',
        'x\n',
        'len(x)\n',
        'len(x[0])\n',
        'len(col)\n',
        'col\n',
        'col_data\n',
        'table_data\n',
        'table_data.keys()\n',
        "sql = 'SELECT {} FROM {} WHERE origin = {} AND dest = {}'\n",
        "sql = 'SELECT {} FROM {} WHERE origin = {}'\n",
        "source=np.genfromtxt(source_file, delimiter=',', dtype=int)\n",
        'source_val=source[-2]\n',
        'source_val\n',
        'curs.execute(sql.format(db_col, t_name, LAST_ORIG-1))\n',
        "curs.execute('END')\n",
        "sql = 'SELECT * FROM {} WHERE origin = {}'\n",
        'curs.execute(sql.format(t_name, LAST_ORIG-1))\n',
        'res=curs.fetchmany()\n',
        'res\n',
        'res[0]==source_val\n',
        'xx=res[0]\n',
        'type(xx)\n',
        'type(source_val)\n',
        'yy=tuple(source_val)\n',
        'xx==yy\n',
        'xx\n',
        'yy\n',
        'missing_tables\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/test_db_loading.py': ['p'\
        'print(content)\n',
        'os.path.base(f).os.path.splitext()[0]\n',
        'os.path.basename(f).os.path.splitext()[0]\n',
        'os.path.splitext(os.path.basename(f))[0]\n',
        'os.path.splitext(os.path.basename(t))[0]\n',
        'first_row\n',
        'self.temp_dir\n',
        "os.listdir(os.path.join(self.temp_dir, 'my_sub_dir_1'))\n",
        'print(sql)\n',
        "os.listdir('/tmp/tmp1iogv0/my_sub_dir_1')\n",
        "os.listdir('/tmp/tmp1iogv0/')\n",
        'pprint(sql)\n',
        'f.seek(0)\n',
        'f.readline()\n',
        'os.listdir(orig_dir)\n',
        'reader\n',
        "line.split(',')\n",
        "line.split(',')[1:]\n",
        "curs.execute('select * from test')\n",
        'res = curs.fetchall()\n',
        'for r in res:\n   print(r)\n\n',
        'a=[]\n',
        'for r in res:\n   a.append(r)\n\n',
        'list(range(1, len(db_cols)+1))\n',
        "x=['origin', 'dest']\n",
        'x.extend(db_cols)\n',
        'x\n',
        'co    l\n',
        'raw_values\n',
        'os.listdir(self.out_dir)\n',
        "with open(fn, 'r') as f:\n    print(f.readlines())\n\n",
        'line\n',
        'fil.readline()\n',
        'conn.close()\n',
        'cu',
        "curs.execute('END')\n",
        'for r in curs.fetchall():\n   print(r)\n\n',
        'curs.execute("SELECT * FROM {}".format(t_name))\n',
        'next(z)\n',
        'z=curs.execute("SELECT * FROM {}".format(t_name))\n',
        'z\n',
        'actual\n',
        'data.sum()\n',
        'data=np.zeros(3,3)\n',
        'data=np.zeros((3,3))\n',
        'file_length = 3\n',
        'len(set(trial_data_lengths))\n',
        'data_file_lengths\n',
        'set(data_file_lengths)\n',
        'len(set(data_file_lengths))\n',
        'trial_data_lengths\n',
        'data_file_lengths.append(file_length)\n',
        'file_length=3\n',
        'msg.format(os.path.join(d, f), data_file_lengths[0], file_length)\n',
        "os.listdir('/tmp/tmp46y8_s/')\n",
        'self.out_dir\n',
        'os.listdir(self.temp_dir)\n',
        'os.path.split(root)\n',
        'root\n',
        'os.path.split(root)[-1]\n',
        'file\n',
        "os.listdir('/tmp/tmp_67i7d_odir_')\n",
        "os.listdir(/tmp/tmp4oov8p_odir_')\n",
        "os.listdir('/tmp/tmp4oov8p_odir_')\n",
        'open(file)\n',
        't_name\n',
        'open(fn)\n',
        'a\n',
        'rows/max_rows\n',
        'max_rows\n',
        'npa=np.zeros((rows**2, cols), dtype=int)\n',
        'len(data)-1\n',
        'len(data)\n',
        'npa[:,data_col]=data[:]\n',
        'initial_rows\n',
        'start\n',
        'rows_per\n',
        'rows\n',
        'raw_data\n',
        'data\n',
        'od\n',
        't\n',
        'npa\n',
        'content\n',
        'sql\n',
        'd\n',
        "s='DROP TABLE IF EXISTS nored_yeshwy_hwy_od'\n",
        "s='DROP TABLE IF EXISTS nored-yeshwy_hwy_od'\n",
        'curs.execute(s)\n',
        'fn\n',
        'fn=DROP TABLE IF EXISTS nored-yeshwy_hwy_od\n',
        "fn='DROP TABLE IF EXISTS nored-yeshwy_hwy_od'\n",
        "fn[:fn.find('_data')].replace('-', '_')\n",
        'curs.execute(sal)\n',
        "sql='DROP TABLE IF EXISTS nored-yeshwy_hwy_od'\n",
        'f\n',
        "f='nored-yeshwy_hwy_od'\n",
        't_name = utils_and_settings.get_table_name_from_fn(f)\n',
        "sql = 'DROP TABLE IF EXISTS {}'.format(t_name)\n",
        'curs.execute(sql)\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/test_misc.py': ['d'\
        'name\n',
        'os.path.split(dname)\n',
        'os.pat.sep\n',
        'os.path.sep\n',
        'col\n',
        'table\n',
        'ret\n',
        "init_rows -d['skip_footer'] - d['skip_header']\n",
        'd\n',
        'next(ret)\n',
        "init_rows - d['skip_footer'] - d['skip_header']\n",
        'target[-1]\n',
        'result[-1]\n',
        'len(result)\n',
        'result[0][1]\n',
        'result[0]\n',
        'result[0][0]\n',
        'result[1][-1]\n',
        'result[0][-1]\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/test_query_db.py': ['s'\
        'al\n',
        'target\n',
        'sql\n'],
                                   u'file:/home/pat/data/RL_analysis/naacp/utils_and_settings.py': ['n'\
        'ext(w)\n']},
                       'launch-id': None,
                       'sel-line': 192,
                       'sel-line-start': 1007208,
                       'selection_end': 1007220,
                       'selection_start': 1007220}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'answer'),
                                       ('symbolic',
        ['mylist'])],
                       'tree-state': {'expanded-nodes': [(1,)],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 57,
                       'folded-linenos': [],
                       'history': {None: ['ls = [0,0,0]\n',
        "'test_hwy_od_data.csv'[:-9]\n",
        "open(/home/pat/mary/flat_NoRed-YesHwy')\n",
        "open('/home/pat/mary/flat_NoRed-YesHwy')\n",
        "open('/home/pat/mary/flat_NoRed-YesHwy/xxx','w')\n",
        'import os\n',
        "os.listdir(''/home/pat/mary')\n",
        "os.listdir(/home/pat/mary')\n",
        "os.listdir('/home/pat/mary')\n",
        "open('/home/pat/mary/flat_NoRed-YesHwy.xxx','w')\n",
        "ls = ['a','b']\n",
        'for ix, l in enumerate(ls):\n    print(ix,l)\n\n',
        'len(ls)\n',
        'rows/max_rows\n',
        'rows\n',
        "junk.write('x\\n')\n",
        'a = \n',
        "a='asdf_data10.csv'\n",
        "a.find('_data')\n",
        'a[:4]\n',
        "a[:a.find('_data')]\n",
        "f='tmpxh9vby_tdir__my_sub_dir_2_data2.csv'\n",
        "f.find('_data')\n",
        "f[:f.find('_data')]\n",
        "f[:f.find('_data')+'_data']\n",
        "f[:f.find('_data')]+'_data'\n",
        "f[:f.find('_data')]+'_data.csv'\n",
        'f\n',
        '1768500**(1/2)\n',
        '1179**2\n',
        'min(1,2,3)\n',
        'round(1.3234, 0)\n',
        'ls = [1,2,3]\n',
        'ls[0:1]\n',
        'ls=[1,2,3,4,5]\n',
        'ls[:2]\n',
        'ls[2:]\n']},
                       'launch-id': None,
                       'sel-line': 68,
                       'sel-line-start': 1539,
                       'selection_end': 1539,
                       'selection_start': 1539}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 0.5664939550949913,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('build_one.py'),
        {'attrib-starts': [],
         'first-line': 40,
         'folded-linenos': [],
         'sel-line': 61,
         'sel-line-start': 2603,
         'selection_end': 2603,
         'selection_start': 2603},
        1447292218.463648],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 139,
          'folded-linenos': [],
          'sel-line': 147,
          'sel-line-start': 6962,
          'selection_end': 7066,
          'selection_start': 6982},
         1447292655.521145],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 54,
          'folded-linenos': [],
          'sel-line': 68,
          'sel-line-start': 2319,
          'selection_end': 2319,
          'selection_start': 2319},
         1447292667.156317],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 31,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1229,
          'selection_end': 1229,
          'selection_start': 1229},
         1447292733.165126],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 66,
          'folded-linenos': [],
          'sel-line': 91,
          'sel-line-start': 3386,
          'selection_end': 3422,
          'selection_start': 3422},
         1447293126.597731],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1229,
          'selection_end': 1229,
          'selection_start': 1229},
         1447293181.222069],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 75,
          'folded-linenos': [],
          'sel-line': 92,
          'sel-line-start': 3442,
          'selection_end': 3480,
          'selection_start': 3476},
         1447293285.041702],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 40,
          'folded-linenos': [],
          'sel-line': 52,
          'sel-line-start': 1702,
          'selection_end': 1778,
          'selection_start': 1778},
         1447293689.733016],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 90,
          'folded-linenos': [],
          'sel-line': 92,
          'sel-line-start': 3415,
          'selection_end': 3801,
          'selection_start': 3415},
         1447293751.631551],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 80,
          'folded-linenos': [],
          'sel-line': 98,
          'sel-line-start': 4148,
          'selection_end': 4178,
          'selection_start': 4178},
         1447293896.697972],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 57,
          'folded-linenos': [],
          'sel-line': 92,
          'sel-line-start': 3415,
          'selection_end': 3801,
          'selection_start': 3415},
         1447293922.087169],
        [loc('build_one.py'),
         {'attrib-starts': [],
          'first-line': 40,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 2603,
          'selection_end': 2603,
          'selection_start': 2603},
         1447293962.800427],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 5,
          'folded-linenos': [],
          'sel-line': 65,
          'sel-line-start': 2204,
          'selection_end': 2269,
          'selection_start': 2269},
         1447294400.156682],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 56,
          'folded-linenos': [],
          'sel-line': 74,
          'sel-line-start': 2813,
          'selection_end': 2845,
          'selection_start': 2842},
         1447294523.944743],
        [loc('build_all.py'),
         {'attrib-starts': [],
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 12,
          'sel-line-start': 319,
          'selection_end': 319,
          'selection_start': 319},
         1447294533.121823],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 32,
          'folded-linenos': [],
          'sel-line': 74,
          'sel-line-start': 2813,
          'selection_end': 2845,
          'selection_start': 2842},
         1447294544.142611],
        [loc('build_one.py'),
         {'attrib-starts': [],
          'first-line': 40,
          'folded-linenos': [],
          'sel-line': 61,
          'sel-line-start': 2603,
          'selection_end': 2603,
          'selection_start': 2603},
         1447294546.267276],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 62,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 2973,
          'selection_end': 3026,
          'selection_start': 3026},
         1447295305.508582],
        [loc('build_tables.py'),
         {'attrib-starts': [('build_tables',
                             30)],
          'first-line': 51,
          'folded-linenos': [],
          'sel-line': 69,
          'sel-line-start': 2374,
          'selection_end': 2374,
          'selection_start': 2374},
         1447295316.732629],
        [loc('build_flat_files.py'),
         {'attrib-starts': [('build_flat_files',
                             32)],
          'first-line': 68,
          'folded-linenos': [],
          'sel-line': 83,
          'sel-line-start': 3373,
          'selection_end': 3390,
          'selection_start': 3390},
         1447295785.408482]],
        20),
        'current-loc': loc('build_one.py'),
        'editor-state-list': [(loc('build_all.py'),
                               {'attrib-starts': [],
                                'first-line': 18,
                                'folded-linenos': [],
                                'sel-line': 12,
                                'sel-line-start': 319,
                                'selection_end': 319,
                                'selection_start': 319}),
                              (loc('build_flat_files.py'),
                               {'attrib-starts': [('build_flat_files',
        32)],
                                'first-line': 68,
                                'folded-linenos': [],
                                'sel-line': 83,
                                'sel-line-start': 3373,
                                'selection_end': 3390,
                                'selection_start': 3390}),
                              (loc('build_one.py'),
                               {'attrib-starts': [],
                                'first-line': 40,
                                'folded-linenos': [],
                                'sel-line': 61,
                                'sel-line-start': 2603,
                                'selection_end': 2603,
                                'selection_start': 2603}),
                              (loc('build_tables.py'),
                               {'attrib-starts': [('build_tables',
        30)],
                                'first-line': 51,
                                'folded-linenos': [],
                                'sel-line': 69,
                                'sel-line-start': 2374,
                                'selection_end': 2374,
                                'selection_start': 2374}),
                              (loc('query_db.py'),
                               {'attrib-starts': [],
                                'first-line': 93,
                                'folded-linenos': [20,
        26,
        45],
                                'sel-line': 102,
                                'sel-line-start': 3476,
                                'selection_end': 3488,
                                'selection_start': 3488}),
                              (loc('test_query_db.py'),
                               {'attrib-starts': [('Test',
        29),
        ('Test.tester',
         30)],
                                'first-line': 65,
                                'folded-linenos': [],
                                'sel-line': 78,
                                'sel-line-start': 2976,
                                'selection_end': 3003,
                                'selection_start': 3003}),
                              (loc('utils_and_settings.py'),
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'sel-line': 15,
                                'sel-line-start': 641,
                                'selection_end': 677,
                                'selection_start': 677})],
        'has-focus': True,
        'locked': False},
        [loc('build_all.py'),
         loc('build_flat_files.py'),
         loc('build_one.py'),
         loc('build_tables.py'),
         loc('query_db.py'),
         loc('test_query_db.py'),
         loc('utils_and_settings.py')]),
                               'open_files': [u'test_query_db.py',
        u'query_db.py',
        u'utils_and_settings.py',
        u'build_all.py',
        u'build_tables.py',
        u'build_flat_files.py',
        u'build_one.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3349282296650718},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (173,
                         24,
                         1342,
                         853)}]}
guimgr.recent-documents = [loc('build_one.py'),
                           loc('build_flat_files.py'),
                           loc('build_tables.py'),
                           loc('build_all.py'),
                           loc('utils_and_settings.py'),
                           loc('query_db.py'),
                           loc('test_query_db.py')]
guimgr.visual-state = {loc('README.md'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 1475,
        'selection_end': 1493,
        'selection_start': 1493},
                       loc('build_all_numpy.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('build_flat.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('build_flat_files.bak.py'): {'attrib-starts': [('b'\
        'uild_flat_files',
        32)],
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 117,
        'sel-line-start': 4853,
        'selection_end': 4853,
        'selection_start': 4853},
                       loc('build_flat_files.py'): {'attrib-starts': [('buil'\
        'd_flat_files',
        32)],
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1447,
        'selection_end': 1447,
        'selection_start': 1447},
                       loc('build_tables.py'): {'attrib-starts': [('build_ta'\
        'bles',
        30)],
        'first-line': 48,
        'folded-linenos': [],
        'sel-line': 60,
        'sel-line-start': 1990,
        'selection_end': 1990,
        'selection_start': 1990},
                       loc('database.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('database_info.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 818,
        'selection_start': 0},
                       loc('describe_db.py'): {'attrib-starts': [('describe_'\
        'db',
        7)],
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 309,
        'selection_end': 825,
        'selection_start': 309},
                       loc('get_max_rows.py'): {'attrib-starts': [],
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 464,
        'selection_end': 464,
        'selection_start': 464},
                       loc('test_db_contents.py'): {'attrib-starts': [],
        'first-line': 94,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 5341,
        'selection_start': 0},
                       loc('test_db_loading.py'): {'attrib-starts': [('teste'\
        'r',
        64),
        ('tester.xtest_load_with_insert',
         283)],
        'first-line': 263,
        'folded-linenos': [],
        'sel-line': 318,
        'sel-line-start': 13700,
        'selection_end': 13753,
        'selection_start': 13700},
                       loc('test_misc.py'): {'attrib-starts': [('test_me',
        5),
        ('test_me.test_get_window',
         71)],
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 71,
        'sel-line-start': 2986,
        'selection_end': 3872,
        'selection_start': 2986},
                       loc('utilities.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../junk/naacp/build_flat_files.py'): {'att'\
        'rib-starts': [('build_flat_files',
                        32)],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 62,
        'sel-line-start': 2409,
        'selection_end': 2455,
        'selection_start': 2455}}
search.replace-history = [u'self.curs',
                          u'self.self.curs',
                          u'self.conn']
search.search-history = [u'debug',
                         u'np.',
                         u'np',
                         u'csv',
                         u'reader',
                         u'needed',
                         u'i needed',
                         u'at line',
                         u'input_rows',
                         u'rows',
                         u'cols',
                         u'get_table_name',
                         u'print',
                         u'have_rows',
                         u'dest',
                         u'basename',
                         u'header',
                         u'curs',
                         u'conn',
                         u'logger']
testing.stored-results = (1,
                          [],
                          {})
